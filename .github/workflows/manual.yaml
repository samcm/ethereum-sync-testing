name: Manual Test
on:
  workflow_dispatch:
    inputs:
      consensus:
        description: 'Consensus client to use'    
        required: true
        type: choice
        options:
        - lighthouse
        - teku
        - prysm
        - nimbus
        - lodestar 
      execution:
        description: 'Execution client to use'    
        required: true
        type: choice
        options:
        - geth
        - besu
        - nethermind
        - erigon
      network:
        description: 'Network to use'    
        required: true
        type: choice
        default: ropsten
        options:
        - ropsten
        - kiln
        - mainnet
      test:
        description: 'Test name to run'    
        required: true
        default: starts-syncing
        type: choice
        options:
        - to-head
        - is-healthy
        - starts-syncing
        - complex1
        - complex2
        - complex3
        - checkpoint
        - to-head-mainnet
      timeout:
        description: 'Timeout in minutes (default 48h)'
        required: true
        default: 2880
        type: number
      runner-engine:
        default: self-hosted
        description: 'Github actions runner to run the job on. Use self-hosted if the test will take longer than 60mins. Note: the actual test will still run on the Kubernetes cluster regardless.'
        required: true
        type: choice
        options:
        - self-hosted
        - ubuntu-latest
      kubernetes-engine:
        default: kind
        description: 'The Kubernetes engine to run the actual test in. Use Kind for small tests that take a low amount of resources. Use DO for otherwise.'
        required: true
        type: choice
        options:
        - kind
        - do
        - ibm
jobs:
  run-test:
    strategy:
      fail-fast: false
    runs-on: ${{ inputs.runner-engine }}
    timeout-minutes: 10080
    steps:
      - uses: actions/checkout@v1
      - name: Print details
        run: |
          echo "Consensus: ${{ inputs.consensus }}"
          echo "Execution: ${{ inputs.execution }}"
          echo "Network: ${{ inputs.network }}"
          echo "Test: ${{ inputs.test }}"
      # - name: Prepare kubeconfig
      #   id: kubeconfig
      #   env:
      #     CLUSTER_A: '${{ secrets.KUBECONFIG }}'
      #     CLUSTER_B: '${{ secrets.KUBECONFIG_CLUSTERB }}'
      #   run: |
      #     if [ "${{ inputs.kubernetes-engine }}" == "do" ]; then
      #       export $KUBECONFIG=$CLUSTER_A
      #     elif [ "${{ inputs.kubernetes-engine }}" == "ibm" ]; then
      #       export $KUBECONFIG=$CLUSTER_B
      #     fi
          
      - name: Run ${{ inputs.network }}-${{ inputs.test }}-${{ inputs.execution }}-${{ inputs.consensus }}
        uses: ./.github/actions/run-test-kubernetes
        id: run-test
        with:
          ## Variables
          consensus: ${{ inputs.consensus }}
          execution: ${{ inputs.execution }}
          network: ${{ inputs.network }}
          test: ${{ inputs.test }}
          uploadDB: false
          kubernetesCluster: ${{ inputs.kubernetes-engine }}

          ## Config/secrets
          kubeConfig: ${{ inputs.kubernetes-engine == 'do' && '${{ secrets.KUBECONFIG_CLUSTERB }}' || '${{ secrets.KUBECONFIG }}' }}
          # kubeConfig: ${{ steps.kubeconfig.outputs.kubeconfig }}
      - name: rclone
        uses: wei/rclone@v1
        if: ${{ always() }}
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        with:
          args: copy ./ spaces://ethereum-sync-tests/tests/${{ steps.run-test.outputs.job }}/
      - name: Print Job ID
        shell: bash
        if: ${{ always() }}
        run: |
          echo ${{ steps.run-test.outputs.job }}
      - name: Print links
        shell: bash
        if: ${{ always() }}
        run: |
          cat links.txt